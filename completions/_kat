#compdef kat

autoload -U is-at-least

_kat() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_kat_commands" \
"*::: :->kat" \
&& ret=0
    case $state in
    (kat)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:kat-command-$line[1]:"
        case $line[1] in
            (config)
_arguments "${_arguments_options[@]}" \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_kat__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:kat-config-command-$line[1]:"
        case $line[1] in
            (locate)
_arguments "${_arguments_options[@]}" \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':path -- The new location for the configuration files.:_files -/' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_kat__config__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:kat-config-help-command-$line[1]:"
        case $line[1] in
            (locate)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(get)
_arguments "${_arguments_options[@]}" \
'-p+[The path where you want to download the problem. 
If not specified, the problem will be downloaded to the current directory.]:PATH:_files -/' \
'--path=[The path where you want to download the problem. 
If not specified, the problem will be downloaded to the current directory.]:PATH:_files -/' \
'-l+[The programming language to setup the problem for.
If not specified, the language will be determined default language in the configuration file.]:LANGUAGE: ' \
'--language=[The programming language to setup the problem for.
If not specified, the language will be determined default language in the configuration file.]:LANGUAGE: ' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':problem -- The id of the problem you want to download from kattis. 
If you don'\''t know the id, you can find it from the url of the problem, i.e. https\://open.kattis.com/problems/<PROBLEM_ID>:' \
&& ret=0
;;
(init)
_arguments "${_arguments_options[@]}" \
'-y[If set, you will not be prompted to confirm whether you want to overwrite existing config files.]' \
'--yes[If set, you will not be prompted to confirm whether you want to overwrite existing config files.]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::choice -- Shortcut to specify which files to download. Options are '\''all'\'' or '\''config'\''. 
'\''config'\'' will only download the config files, while '\''all'\'' will download all files.
If not specified, you will be prompted to choose which files.:' \
&& ret=0
;;
(open)
_arguments "${_arguments_options[@]}" \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::problem -- The id of the problem you want to open in the browser.:' \
&& ret=0
;;
(submit)
_arguments "${_arguments_options[@]}" \
'-f+[The path of the solution file to submit. 
If not specified, the first file with the same name as the problem in the problem folder will be used.
If multiple files with the correct extension are found, you will be prompted to choose which one to use.]:FILE:_files' \
'--file=[The path of the solution file to submit. 
If not specified, the first file with the same name as the problem in the problem folder will be used.
If multiple files with the correct extension are found, you will be prompted to choose which one to use.]:FILE:_files' \
'-l+[The programming language to test the problem against. 
This can be used to override the default language set in the configuration file.]:LANGUAGE: ' \
'--language=[The programming language to test the problem against. 
This can be used to override the default language set in the configuration file.]:LANGUAGE: ' \
'-t[If set, the the problem will be run against all of the local test cases before submitting.
If the problem fails any of the test cases, the submission will be aborted.]' \
'--test-first[If set, the the problem will be run against all of the local test cases before submitting.
If the problem fails any of the test cases, the submission will be aborted.]' \
'-y[If set, you will not be prompted to confirm the submission before it is sent to kattis.]' \
'--yes[If set, you will not be prompted to confirm the submission before it is sent to kattis.]' \
'-o[If set, the submission will be opened in the browser after all tests have been run on the kattis server.]' \
'--open[If set, the submission will be opened in the browser after all tests have been run on the kattis server.]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::path -- The path of the problem (folder) you want to submit. By default, the current directory is used.:_files -/' \
&& ret=0
;;
(test)
_arguments "${_arguments_options[@]}" \
'-f+[The path of the solution file to test. If not specified, the first file with the same name as the problem in the problem folder will be used.
If multiple files with the correct extension are found, you will be prompted to choose which one to use.]:FILE:_files' \
'--file=[The path of the solution file to test. If not specified, the first file with the same name as the problem in the problem folder will be used.
If multiple files with the correct extension are found, you will be prompted to choose which one to use.]:FILE:_files' \
'-t+[The id(s) of the test case(s) to test against. 
If not specified, all test cases will be tested, e.g. '\''1'\'', '\''1-3'\'', or '\''1,3-5'\''.]:TEST_CASES: ' \
'--test-cases=[The id(s) of the test case(s) to test against. 
If not specified, all test cases will be tested, e.g. '\''1'\'', '\''1-3'\'', or '\''1,3-5'\''.]:TEST_CASES: ' \
'-l+[The programming language to test the problem against. 
This can be used to override the default language set in the configuration file.]:LANGUAGE: ' \
'--language=[The programming language to test the problem against. 
This can be used to override the default language set in the configuration file.]:LANGUAGE: ' \
'-s[If set, try to submit the problem to kattis if all tests pass.]' \
'--submit[If set, try to submit the problem to kattis if all tests pass.]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::path -- The path of the problem (folder) you want to test. By default, the current directory is used.:_files -/' \
&& ret=0
;;
(watch)
_arguments "${_arguments_options[@]}" \
'-f+[The path of the solution file to watch. 
If not specified, the first file with the same name as the problem in the problem folder will be used.
If multiple files with the correct extension are found, you will be prompted to choose which one to use.]:FILE:_files' \
'--file=[The path of the solution file to watch. 
If not specified, the first file with the same name as the problem in the problem folder will be used.
If multiple files with the correct extension are found, you will be prompted to choose which one to use.]:FILE:_files' \
'-t+[The id(s) of the test case(s) to test against.
If not specified, all test cases will be tested, e.g. '\''1'\'', '\''1-3'\'', or '\''1,3-5'\''.]:TEST_CASES: ' \
'--test-cases=[The id(s) of the test case(s) to test against.
If not specified, all test cases will be tested, e.g. '\''1'\'', '\''1-3'\'', or '\''1,3-5'\''.]:TEST_CASES: ' \
'-l+[The programming language to test the problem against. 
This can be used to override the default language set in the configuration file.]:LANGUAGE: ' \
'--language=[The programming language to test the problem against. 
This can be used to override the default language set in the configuration file.]:LANGUAGE: ' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::path -- The path of the problem (folder) you want to watch.:_files -/' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
":: :_kat__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:kat-help-command-$line[1]:"
        case $line[1] in
            (config)
_arguments "${_arguments_options[@]}" \
":: :_kat__help__config_commands" \
"*::: :->config" \
&& ret=0

    case $state in
    (config)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:kat-help-config-command-$line[1]:"
        case $line[1] in
            (locate)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
(get)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(init)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(open)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(submit)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(test)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(watch)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_kat_commands] )) ||
_kat_commands() {
    local commands; commands=(
'config:Commands to help you configure kat' \
'get:Get a problem from kattis' \
'init:Initialise the configuration files.' \
'open:Open a problem in the browser' \
'submit:Submit a problem to kattis' \
'test:Test a problem against its test case(s)' \
'watch:Watch a problem file for changes, and automatically test it when it changes' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'kat commands' commands "$@"
}
(( $+functions[_kat__config_commands] )) ||
_kat__config_commands() {
    local commands; commands=(
'locate:Locate the configuration files.' \
'set:Set the location of where the configuration files are stored.' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'kat config commands' commands "$@"
}
(( $+functions[_kat__help__config_commands] )) ||
_kat__help__config_commands() {
    local commands; commands=(
'locate:Locate the configuration files.' \
'set:Set the location of where the configuration files are stored.' \
    )
    _describe -t commands 'kat help config commands' commands "$@"
}
(( $+functions[_kat__get_commands] )) ||
_kat__get_commands() {
    local commands; commands=()
    _describe -t commands 'kat get commands' commands "$@"
}
(( $+functions[_kat__help__get_commands] )) ||
_kat__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'kat help get commands' commands "$@"
}
(( $+functions[_kat__config__help_commands] )) ||
_kat__config__help_commands() {
    local commands; commands=(
'locate:Locate the configuration files.' \
'set:Set the location of where the configuration files are stored.' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'kat config help commands' commands "$@"
}
(( $+functions[_kat__config__help__help_commands] )) ||
_kat__config__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'kat config help help commands' commands "$@"
}
(( $+functions[_kat__help_commands] )) ||
_kat__help_commands() {
    local commands; commands=(
'config:Commands to help you configure kat' \
'get:Get a problem from kattis' \
'init:Initialise the configuration files.' \
'open:Open a problem in the browser' \
'submit:Submit a problem to kattis' \
'test:Test a problem against its test case(s)' \
'watch:Watch a problem file for changes, and automatically test it when it changes' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'kat help commands' commands "$@"
}
(( $+functions[_kat__help__help_commands] )) ||
_kat__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'kat help help commands' commands "$@"
}
(( $+functions[_kat__help__init_commands] )) ||
_kat__help__init_commands() {
    local commands; commands=()
    _describe -t commands 'kat help init commands' commands "$@"
}
(( $+functions[_kat__init_commands] )) ||
_kat__init_commands() {
    local commands; commands=()
    _describe -t commands 'kat init commands' commands "$@"
}
(( $+functions[_kat__config__help__locate_commands] )) ||
_kat__config__help__locate_commands() {
    local commands; commands=()
    _describe -t commands 'kat config help locate commands' commands "$@"
}
(( $+functions[_kat__config__locate_commands] )) ||
_kat__config__locate_commands() {
    local commands; commands=()
    _describe -t commands 'kat config locate commands' commands "$@"
}
(( $+functions[_kat__help__config__locate_commands] )) ||
_kat__help__config__locate_commands() {
    local commands; commands=()
    _describe -t commands 'kat help config locate commands' commands "$@"
}
(( $+functions[_kat__help__open_commands] )) ||
_kat__help__open_commands() {
    local commands; commands=()
    _describe -t commands 'kat help open commands' commands "$@"
}
(( $+functions[_kat__open_commands] )) ||
_kat__open_commands() {
    local commands; commands=()
    _describe -t commands 'kat open commands' commands "$@"
}
(( $+functions[_kat__config__help__set_commands] )) ||
_kat__config__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'kat config help set commands' commands "$@"
}
(( $+functions[_kat__config__set_commands] )) ||
_kat__config__set_commands() {
    local commands; commands=()
    _describe -t commands 'kat config set commands' commands "$@"
}
(( $+functions[_kat__help__config__set_commands] )) ||
_kat__help__config__set_commands() {
    local commands; commands=()
    _describe -t commands 'kat help config set commands' commands "$@"
}
(( $+functions[_kat__help__submit_commands] )) ||
_kat__help__submit_commands() {
    local commands; commands=()
    _describe -t commands 'kat help submit commands' commands "$@"
}
(( $+functions[_kat__submit_commands] )) ||
_kat__submit_commands() {
    local commands; commands=()
    _describe -t commands 'kat submit commands' commands "$@"
}
(( $+functions[_kat__help__test_commands] )) ||
_kat__help__test_commands() {
    local commands; commands=()
    _describe -t commands 'kat help test commands' commands "$@"
}
(( $+functions[_kat__test_commands] )) ||
_kat__test_commands() {
    local commands; commands=()
    _describe -t commands 'kat test commands' commands "$@"
}
(( $+functions[_kat__help__watch_commands] )) ||
_kat__help__watch_commands() {
    local commands; commands=()
    _describe -t commands 'kat help watch commands' commands "$@"
}
(( $+functions[_kat__watch_commands] )) ||
_kat__watch_commands() {
    local commands; commands=()
    _describe -t commands 'kat watch commands' commands "$@"
}

if [ "$funcstack[1]" = "_kat" ]; then
    _kat "$@"
else
    compdef _kat kat
fi
