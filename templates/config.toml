# This is a sample configuration file for kat.
# It specifies the commands to compile and execute programs in different languages,
# as well as the file extensions associated with each language.
# You can use this file as a starting point for your own configuration file,
# so feel free to modify or add to it as you see fit :).

[default]
# The default language to use if none is specified.
language = "python"

[languages]
# To add a new language, create a new section with the format [languages.<language_name>].
# Each language section should have the following members:
# - compile_command (optional): The command to compile a program in this language. Not all languages need this for example Python.
# - execute_command: The command to execute a program in this language.
# - extensions: The file extensions associated with this language. This should be a list of strings.
# - template (optional): The filename of the template file you want to use when getting a problem from kattis - the variables below can also be used in the template file itself.
# The commands can use the following variables:
# - {source_file}: The name of the source file. 
# - {source_file_no_ext}: The name of the source file without its extension. This can for example be used with Java where the public class name must match the filename.
# - {executable_path}: The path to the executable file, including the output directory and the executable file name. 
# - {output_directory}: The directory where the compiled files should be placed. This can be used if for example the compiler generates multiple (auxiliary) files.

[languages.python]
execute_command = "python {source_file}"
extensions = ["py"]
template = "template.py"

[languages.java]
compile_command = "javac -encoding UTF-8 -sourcepath {output_directory} -cp {output_directory}/* -d {output_directory} {source_file}"
execute_command = "java -cp {output_directory} {source_file_no_ext}"
extensions = ["java"]
template = "template.java"

[languages.c]
compile_command = "gcc -g -O2 -std=gnu11 -static -o {executable_path} {source_file} -lm"
execute_command = "{executable_path}"
extensions = ["c"]
template = "template.c"

[languages.cpp]
compile_command = "g++ -g -O2 -std=gnu++17 -static -o {executable_path} -lrt -Wl,--whole-archive -lpthread -Wl,--no-whole-archive {source_file}"
execute_command = "{executable_path}"
extensions = ["cpp"]
template = "template.cpp"

[languages.rust]
compile_command = "rustc -o {executable_path} -O --crate-type bin --edition=2018 {source_file}"
execute_command = "{executable_path}"
extensions = ["rs"]
template = "template.rs"
